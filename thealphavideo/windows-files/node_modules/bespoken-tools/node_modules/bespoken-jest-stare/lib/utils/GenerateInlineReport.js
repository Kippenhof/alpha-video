"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ParcelBundler = require("parcel-bundler");
const plugin = require("parcel-plugin-inliner");
const Constants_1 = require("../processor/Constants");
const IO_1 = require("./IO");
const Dependencies_1 = require("../processor/Dependencies");
const path = require("path");
const resultDir = "web/temp/";
const obtainWebFile = (name) => {
    return IO_1.IO.readFileSync(path.resolve(__dirname, "./../../web", name));
};
const obtainJsRenderFile = (name) => {
    return IO_1.IO.readFileSync(path.resolve(__dirname, "./../render/", name));
};
const addThirdParty = (dependency) => {
    const location = require.resolve(dependency.requireDir + dependency.file);
    IO_1.IO.writeFileSync(dependency.targetDir + dependency.file, IO_1.IO.readFileSync(location));
};
IO_1.IO.mkdirsSync(resultDir);
IO_1.IO.copyFileSync("web/template.html", resultDir + "template.html");
const cssDir = resultDir + Constants_1.Constants.CSS_DIR;
IO_1.IO.mkdirsSync(cssDir);
IO_1.IO.writeFileSync(cssDir + Constants_1.Constants.JEST_STARE_CSS, obtainWebFile(Constants_1.Constants.JEST_STARE_CSS));
const jsDir = resultDir + Constants_1.Constants.JS_DIR;
IO_1.IO.mkdirsSync(jsDir);
IO_1.IO.writeFileSync(jsDir + Constants_1.Constants.JEST_STARE_JS, obtainJsRenderFile(Constants_1.Constants.JEST_STARE_JS));
Dependencies_1.Dependencies.THIRD_PARTY_DEPENDENCIES.forEach((dependency) => {
    const updatedDependency = Object.assign({}, ...[dependency]);
    updatedDependency.targetDir = resultDir + dependency.targetDir;
    addThirdParty(updatedDependency);
});
const bundler = new ParcelBundler(resultDir + "template.html", {
    watch: false,
    publicUrl: ".",
    outDir: "web/dist",
    minify: true,
});
plugin(bundler);
bundler.bundle().then((result) => {
    try {
        IO_1.IO.copyFileSync("web/dist/template.html", "web/templateInlineSource.html");
        IO_1.IO.deleteFolderSync("web/dist");
        IO_1.IO.deleteFolderSync("web/temp");
    }
    catch (error) {
        console.log("error while parce bundle", error);
        throw error;
    }
}).catch((error) => {
    console.log("error while parce bundle", error);
    throw error;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VuZXJhdGVJbmxpbmVSZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvR2VuZXJhdGVJbmxpbmVSZXBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxnREFBZ0Q7QUFFaEQsZ0RBQWdEO0FBQ2hELHNEQUFtRDtBQUNuRCw2QkFBMEI7QUFDMUIsNERBQXlEO0FBQ3pELDZCQUE2QjtBQUc3QixNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUM7QUFFOUIsTUFBTSxhQUFhLEdBQUcsQ0FBQyxJQUFZLEVBQVUsRUFBRTtJQUMzQyxPQUFPLE9BQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDekUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLElBQVksRUFBVSxFQUFFO0lBQ2hELE9BQU8sT0FBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUMxRSxDQUFDLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLFVBQWlDLEVBQUUsRUFBRTtJQUN4RCxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFFLE9BQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUMsSUFBSSxFQUFFLE9BQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUN4RixDQUFDLENBQUM7QUFHRixPQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3pCLE9BQUUsQ0FBQyxZQUFZLENBQUMsbUJBQW1CLEVBQUUsU0FBUyxHQUFHLGVBQWUsQ0FBQyxDQUFDO0FBR2xFLE1BQU0sTUFBTSxHQUFHLFNBQVMsR0FBRyxxQkFBUyxDQUFDLE9BQU8sQ0FBQztBQUM3QyxPQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3RCLE9BQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLHFCQUFTLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxxQkFBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7QUFHN0YsTUFBTSxLQUFLLEdBQUcsU0FBUyxHQUFHLHFCQUFTLENBQUMsTUFBTSxDQUFDO0FBQzNDLE9BQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDckIsT0FBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcscUJBQVMsQ0FBQyxhQUFhLEVBQUUsa0JBQWtCLENBQUMscUJBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0FBRy9GLDJCQUFZLENBQUMsd0JBQXdCLENBQUMsT0FBTyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUU7SUFDekQsTUFBTSxpQkFBaUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM3RCxpQkFBaUIsQ0FBQyxTQUFTLEdBQUcsU0FBUyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUM7SUFDL0QsYUFBYSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDckMsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQyxTQUFTLEdBQUcsZUFBZSxFQUM3RDtJQUNJLEtBQUssRUFBRSxLQUFLO0lBQ1osU0FBUyxFQUFFLEdBQUc7SUFDZCxNQUFNLEVBQUUsVUFBVTtJQUNsQixNQUFNLEVBQUUsSUFBSTtDQUNmLENBQUMsQ0FBQztBQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNoQixPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7SUFDN0IsSUFBSTtRQUNBLE9BQUUsQ0FBQyxZQUFZLENBQUMsd0JBQXdCLEVBQUUsK0JBQStCLENBQUMsQ0FBQztRQUMzRSxPQUFFLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEMsT0FBRSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ25DO0lBQUMsT0FBTyxLQUFLLEVBQUU7UUFFWixPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQy9DLE1BQU0sS0FBSyxDQUFDO0tBQ2Y7QUFDTCxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtJQUVmLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0MsTUFBTSxLQUFLLENBQUM7QUFDaEIsQ0FBQyxDQUFDLENBQUMifQ==